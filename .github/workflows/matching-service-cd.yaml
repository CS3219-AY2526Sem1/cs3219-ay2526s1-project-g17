name: CD - matching_service_v2

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging

permissions:
  contents: read
  id-token: write

concurrency:
  group: matching-service-cd
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.MATCHING_SERVICE_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.MATCHING_SERVICE_GCP_PROJECT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure Docker to use gcloud as credential helper
        run: |
          gcloud --quiet auth configure-docker

      - name: Build and push container image
        uses: docker/build-push-action@v4
        with:
          context: matching_service_v2
          file: matching_service_v2/Dockerfile
          push: true
          tags: ${{secrets.REGION}}-docker.pkg.dev/${{secrets.MATCHING_SERVICE_GCP_PROJECT}}/cs3219/matching-services:latest 

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: matching-service
          image: ${{secrets.REGION}}-docker.pkg.dev/${{secrets.MATCHING_SERVICE_GCP_PROJECT}}/cs3219/matching-services:latest 
          region: ${{ secrets.REGION }}
          allow_unauthenticated: true

      - name: Output Cloud Run URL
        run: |
          echo "Deployed image: ${{secrets.REGION}}-docker.pkg.dev/${{secrets.MATCHING_SERVICE_GCP_PROJECT}}/cs3219/matching-services:latest "
          gcloud run services describe matching-service --region=${{ secrets.REGION }} --format="value(status.url)"

